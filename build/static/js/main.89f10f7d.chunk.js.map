{"version":3,"sources":["components/RuleRange.jsx","components/RuleSet.jsx","App.js","Table.js","serviceWorker.js","index.js"],"names":["RuleRange","props","updateValue","e","n","item","data","name","target","value","getStartValue","validateField","dataSlide","diff","Math","abs","plus","minus","diffMin","diffMax","parseInt","state","rangeMin","rangeMax","fieldName","inputValid","conditionValid","parametrValid","setState","onSlide","isNaN","changeColorSlider","colorSlider","connectValue","rangevalue","connect","condition1","updateCheck","isChecked","ruleSetid","checkRule","id","this","inputColor","conditionColor","parametrColor","parDescription","displayBlock","belongGroup","console","log","Row","index","Col","sm","className","InputGroup","Checkbox","size","checked","onChange","mb","Form","Control","type","placeholder","style","borderColor","required","as","Tabs","Tab","eventKey","title","parName","parShortTitle","condition2","backgroundColor","ButtonGroup","aria-label","Button","display","variant","onClick","transferRule","icon","faShare","removeRule","faTrashAlt","range","min","max","start","tooltips","React","Component","RuleSet","disunion","addRules","ruleSet","rules","delete","deleteRuleSet","Container","map","i","onChangeSlide","key","ButtonToolbar","App","addRuleSet","ruleSets","concat","addNewRuleSet","arrRule","newRuleSet","Date","now","addNewRule","preventDefault","newItem","rule","stateColor","addRule","forEach","splice","find","findIndex","RuleFind","RuleFindIndex","findRuleSet","filter","length","newList","rangenegative","arr","setrule","ischeck","checkRules","found","disabledCheck","some","el","SetRule","check","push","unionRule","arrUnionRule","JSON","parse","stringify","x","indexSet","Object","assign","json","jsonData","button","Prepend","Text","FormControl","aria-describedby","disabled","reverse","StatusTable","filterByData","items","decision","getRangeName","getConditionName","conds","conditions","filterBy","indexOf","findString","str","array","findItems","filterText","arrRez","arrIndexState","rez","obj","componentDidMount","fetch","then","response","result","isFetching","error","isLoaded","select","Table","bordered","defaultValue","r","rangeItem","condsItem","rowSpan","Boolean","window","location","hostname","match","routing","exact","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89f10f7d.chunk.js","sourcesContent":["import React from 'react';\r\nimport Nouislider from 'react-nouislider';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { FaBars, faTrashAlt, faShare} from '@fortawesome/free-solid-svg-icons'\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\n\r\n\r\n\r\n\r\nclass RuleRange extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      inputValid: false,\r\n      conditionValid: true,\r\n      parametrValid: false,\r\n      colorSlider: '',\r\n      rangevalue: '',\r\n      rangeMin: -60,\r\n      rangeMax: 60,\r\n      connect: 'upper',\r\n      isChecked: false,\r\n    };\r\n  }\r\n  updateValue = (e) => {\r\n    let n = this.props.item.data; \r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    n[name] = value;\r\n    this.getStartValue(n);\r\n    this.validateField(name, value);\r\n    /* Изменение границ слайдера */\r\n    this.dataSlide(n);\r\n  }\r\n  /* Изменение границ слайдера */\r\n  dataSlide = (n) => {\r\n    let diff = Math.abs(n.plus - n.minus);\r\n    let diffMin = n.minus - diff;\r\n    let diffMax = 0; \r\n    if (n.minus != \"\") {\r\n      (n.plus == \"\") ? ( diffMax = parseInt(n.minus) + diff) : (diffMax =  parseInt(n.plus) + diff);\r\n    }\r\n    if (diffMin === diffMax) {\r\n      this.state.rangeMin = -60;\r\n      this.state.rangeMax = 60;\r\n    } else {\r\n      this.state.rangeMin = diffMin;\r\n      this.state.rangeMax = diffMax;\r\n    }\r\n  }\r\n\r\n  validateField = (fieldName, value) => {\r\n    let inputValid = this.state.inputValid;\r\n    let conditionValid = this.state.conditionValid;\r\n    let parametrValid = this.state.parametrValid;\r\n  switch(fieldName) {\r\n      case 'minus':\r\n        value != \"\" ? inputValid = true : inputValid = false;\r\n        break;\r\n      case 'parDescription':\r\n        value != \"\" ? parametrValid = true : parametrValid = false;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({inputValid: inputValid, parametrValid: parametrValid, conditionValid: conditionValid });\r\n  }\r\n\r\n  onSlide = (data) => {\r\n    this.props.item.data.minus = parseInt(data[0]);\r\n    if (!isNaN(data[1])) {\r\n      this.props.item.data.plus = parseInt(data[1]);\r\n    }\r\n    this.getStartValue(this.props.item.data);\r\n  }\r\n  changeColorSlider = (e) => {\r\n    this.setState({colorSlider: e.target.value})\r\n  }\r\n\r\n  getStartValue = (item) => {\r\n    let connectValue;\r\n    if (item.plus != '') {\r\n      this.setState({rangevalue: [item.minus,item.plus], connect: true});\r\n    } else {\r\n      switch(item.condition1) {\r\n        case \"<\":\r\n        case \"≤\":\r\n            connectValue = 'upper';\r\n          break;\r\n        case \">\":\r\n        case \"≥\":\r\n            connectValue = 'lower';\r\n          break;\r\n        case \"=\":\r\n            connectValue = false;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      this.setState({rangevalue: item.minus, connect: connectValue});\r\n    }\r\n  }\r\n  updateCheck = () => {\r\n    let {isChecked} = this.state;\r\n    let {item, ruleSetid} = this.props;\r\n    this.setState(state => ({\r\n      isChecked: !state.isChecked\r\n    }));\r\n    this.props.checkRule(item.id, item.data, ruleSetid, !isChecked);\r\n  }\r\n  componentDidMount(){\r\n    this.getStartValue(this.props.item.data);\r\n    this.dataSlide(this.props.item.data);\r\n  }\r\n    render() {\r\n      \r\n      var inputColor = this.props.item.data.minus!==\"\"?\"green\":\"red\";\r\n      var conditionColor = this.props.item.data.condition1!==\"\"?\"green\":\"red\";\r\n      var parametrColor = this.props.item.data.parDescription!==\"\"?\"green\":\"red\";\r\n      var displayBlock = this.props.belongGroup?\"block\":\"none\";\r\n      console.log(displayBlock);\r\n      return (  \r\n        \r\n        <Row id={this.props.item.id} index={this.props.item.id}>\r\n        <Col sm=\"1\" className = \"col-flex\">\r\n            <InputGroup.Checkbox  \r\n              size=\"smm\" \r\n              name={\"checkbox\"+this.props.item.id} \r\n              className = \"col-flex-margin\" \r\n              checked={this.state.isChecked}  \r\n              onChange={this.updateCheck}/>\r\n        </Col>\r\n        <Col sm=\"11\" mb =\"5\">\r\n          <Form>\r\n            <Form.Row>\r\n              <Col sm=\"1\" className = \"col-flex\">\r\n                <Form.Control \r\n                  size=\"smm\" \r\n                  type=\"number\" \r\n                  className = \"col-flex-margin\" \r\n                  value = {this.props.item.data.minus} \r\n                  name = \"minus\" \r\n                  placeholder=\"Знач\" \r\n                  onChange = {this.updateValue} \r\n                  style={{borderColor:inputColor}} required/>\r\n              </Col>\r\n              <Col sm=\"1\" className = \"col-flex\">\r\n                <Form.Control \r\n                    as=\"select\"           \r\n                    className=\"col-flex-margin mx-auto custom-select\"\r\n                    size=\"smm\" \r\n                    value = {this.props.item.data.condition1} \r\n                    name = \"condition1\" \r\n                    style={{borderColor:conditionColor}} required\r\n                    onChange = {this.updateValue}>\r\n                      <option value = \"&#60;\">&#60;</option>\r\n                      <option value = \"&#8804;\">&#8804;</option>\r\n                      <option value = \"&#62;\">&#62;</option>\r\n                      <option value = \"&#8805;\">&#8805;</option>\r\n                      <option value = \"=\">=</option>\r\n                </Form.Control>\r\n              </Col>\r\n              <Col sm=\"4\" className=\"col-flex-margin\">\r\n                  <Tabs className = \"sm-text\">\r\n                      <Tab eventKey=\"description\" title=\"Описание\">\r\n                        <Form.Control size=\"smm\" value = {this.props.item.data.parDescription} name = \"parDescription\" placeholder=\"Параметр\" onChange = {this.updateValue} style={{borderColor:parametrColor}} required/>\r\n                      </Tab>\r\n                      <Tab eventKey=\"profile\" title=\"Наименование\">\r\n                        <Form.Control size=\"smm\" value = {this.props.item.data.parName} name = \"parName\" placeholder=\"Параметр\" onChange = {this.updateValue} required/>\r\n                      </Tab>\r\n                      <Tab eventKey=\"contact\" title=\"Кр. Наименование\">\r\n                        <Form.Control size=\"smm\" value = {this.props.item.data.parShortTitle} name = \"parShortTitle\" placeholder=\"Параметр\" onChange = {this.updateValue} required/>\r\n                      </Tab>\r\n                      <Tab eventKey=\"unit\" title=\"Ед.изм\">\r\n                        <Form.Control size=\"smm\"  name = \"unit\" placeholder=\"ед.изм\" required/>\r\n                      </Tab>\r\n                    </Tabs>\r\n              </Col>\r\n              <Col sm=\"1\" className = \"col-flex\">\r\n                <Form.Control \r\n                    as=\"select\"           \r\n                    className=\"col-flex-margin mx-auto custom-select\"\r\n                    size=\"smm\"\r\n                    value = {this.props.item.data.condition2} \r\n                    name = \"condition2\" \r\n                    onChange = {this.updateValue}>\r\n                      <option value = \"&#60;\">&#60;</option>\r\n                      <option value = \"&#8804;\">&#8804;</option>\r\n                </Form.Control>\r\n              </Col>\r\n              <Col sm=\"1\" className = \"col-flex\">\r\n                <Form.Control \r\n                  size=\"smm\" \r\n                  className = \"col-flex-margin form-control\" \r\n                  type=\"number\" \r\n                  value = {this.props.item.data.plus} \r\n                  name = \"plus\" \r\n                  placeholder=\"Знач\" \r\n                  onChange = {this.updateValue}/>\r\n              </Col>\r\n              <Col sm=\"2\" className = \"col-flex\">\r\n                <Form.Control \r\n                  as=\"select\"           \r\n                  className=\"mr-sm-2 col-flex-margin\"\r\n                  size=\"smm\"  \r\n                  value = {this.state.colorSlider} \r\n                  name = \"slider\" \r\n                  placeholder=\"Знач\" \r\n                  onChange = {this.changeColorSlider}>\r\n                    <option style={{backgroundColor:\"#ff6170\"}} value = \"red\">Не норма</option>\r\n                    <option style={{backgroundColor: \"#6db4ff\"}} value = \"blue\">Ниже нормы</option>\r\n                    <option style={{backgroundColor: \"#f5fb6a\"}} value = \"yellow\">Норма</option>\r\n                    <option style={{backgroundColor:\"#28a745\"}} value = \"green\">Выше нормы</option>\r\n                    <option style={{backgroundColor:\"aqua\"}} value = \"aqua\">Отлично</option>\r\n                </Form.Control>\r\n              </Col>\r\n              <Col sm=\"1\" className = \"\">\r\n              </Col> \r\n              <Col sm=\"1\" className = \"col-flex-margin\">\r\n              <ButtonGroup className=\"mr-2 mb-2\" aria-label=\"First group\">\r\n                <Button \r\n                  title = \"Убрать из группы\"\r\n                  size=\"sm\" \r\n                  style = {{display: displayBlock}}\r\n                  variant=\"outline-primary\" \r\n                  className = \"btn-b\"\r\n                  onClick={() => this.props.transferRule(this.props.item.id)}>\r\n                  <FontAwesomeIcon icon={faShare}/>\r\n                </Button>\r\n              </ButtonGroup>\r\n              <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                <Button \r\n                  title = \"Удалить\"\r\n                  size=\"sm\" \r\n                  variant=\"outline-danger\" \r\n                  onClick={() => this.props.removeRule(this.props.item.id)}>\r\n                  <FontAwesomeIcon icon={faTrashAlt}/>\r\n                </Button>\r\n              </ButtonGroup>\r\n              </Col>  \r\n            </Form.Row>\r\n          </Form>\r\n          <div id={this.state.colorSlider}>\r\n            <Nouislider \r\n            id = {\"Slider\" + this.props.item.id}\r\n            range = {{min: this.state.rangeMin, max: this.state.rangeMax}}\r\n            connect = {this.state.connect}\r\n            start = {this.state.rangevalue}\r\n            /*onSlide = {this.onSlide}*/\r\n            tooltips\r\n            />\r\n          </div>\r\n      </Col>\r\n      </Row>\r\n        \r\n      );\r\n    }\r\n  }\r\n\r\n  export default RuleRange;","import React from 'react';\r\nimport RuleRange from './RuleRange';\r\nimport Nouislider from 'react-nouislider';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport Tab from 'react-bootstrap/Tab';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { FaBars} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\n\r\n\r\nclass RuleSet extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n    };\r\n  }\r\n  disunion = () => {\r\n    this.props.addRules(this.props.ruleSet.rules);\r\n    this.delete();\r\n  }\r\n  delete = () => {\r\n    console.log(this.props.index);\r\n    this.props.deleteRuleSet(this.props.index);\r\n  }\r\n    render() {\r\n\r\n    \r\n      return (  \r\n        <Container className = \"ruleset-container\" index={this.props.ruleSet.id}>\r\n          {this.props.ruleSet.rules.map((item, i) => (\r\n            <>\r\n              \r\n                  <RuleRange \r\n                      onChangeSlide={this.props.onChangeSlide}\r\n                      item = {item}\r\n                      removeRule= {this.props.removeRule}\r\n                      index = {i}\r\n                      checkRule = {this.props.checkRule}\r\n                      ruleSetid = {this.props.ruleSet.id}\r\n                      key = {item.id}\r\n                      belongGroup = {true}\r\n                      transferRule = {this.props.transferRule}\r\n                     />\r\n              <hr/>\r\n            </>\r\n          ))}\r\n          <ButtonToolbar aria-label=\"Toolbar with button groups\" className=\"justify-content-end\">\r\n            <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n              <Button size=\"sm\" variant=\"outline-primary\" onClick={this.disunion} >Разъединить</Button>\r\n            </ButtonGroup>\r\n            <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\r\n              <Button size=\"sm\" variant=\"outline-danger\" onClick={this.delete}>Удалить</Button>\r\n            </ButtonGroup>\r\n          </ButtonToolbar>\r\n      </Container>\r\n        \r\n      );\r\n    }\r\n  }\r\n\r\n  export default RuleSet;","import React from 'react';\r\nimport './App.css';\r\nimport RuleRange from './components/RuleRange';\r\nimport RuleSet from './components/RuleSet';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport json from './json/dataRule.json';\r\n\r\n\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      rules: Object.assign({}, json).rules,\r\n      ruleSets:  Object.assign({}, json).ruleSets,\r\n      jsonData: Object.assign({}, json),\r\n      checkRules: [],\r\n      disabledCheck: false\r\n    };\r\n  }\r\n  addRuleSet = (ruleSet) => {\r\n    this.setState(state => ({\r\n      ruleSets: state.ruleSets.concat(ruleSet)\r\n    }));\r\n  }\r\n  addNewRuleSet = (arrRule) => {\r\n    const newRuleSet = {\r\n      id: \"Group1\" + Date.now(),\r\n      rules: arrRule\r\n    };\r\n    this.addRuleSet(newRuleSet);\r\n  }\r\n  addNewRule = (e) => {\r\n    e.preventDefault();\r\n    const newItem = {\r\n      id: Date.now(),\r\n      data: {\r\n        plus: '',\r\n        minus: '',\r\n        condition1: '<',\r\n        condition2: '<',\r\n        rule: '',\r\n        parDescription: '',\r\n        parName: '',\r\n        parShortTitle: '',\r\n        stateColor: 'red'\r\n      }\r\n    };\r\n    this.addRule(newItem);\r\n  }\r\n  addRules = (rules) => {\r\n    rules.forEach((item) => {\r\n      this.addRule(item);\r\n    });\r\n  }\r\n  addRule = (rule) => {\r\n    this.setState(state => ({\r\n      rules: state.rules.concat(rule)\r\n    }));\r\n  }\r\n  deleteRuleSet = (index) => {\r\n    var ruleSet = this.state.ruleSets;\r\n    ruleSet.splice (index, 1);\r\n    this.setState ({ruleSets: ruleSet});\r\n  } \r\n  removeRule = (id) => {\r\n    console.log(id);\r\n    let { rules, ruleSets} = this.state;\r\n    let find, findIndex, RuleFind, RuleFindIndex, findRuleSet, newRules ; \r\n    ruleSets.map((ruleSet, index) => {\r\n        find = ruleSet.rules.filter((item, i) => item.id === id);\r\n        findIndex = ruleSet.rules.findIndex((item, i) => item.id === id);\r\n        findRuleSet = ruleSet.rules.filter((item, i) => item.id !== id);\r\n        if(find.length !== 0) {\r\n          RuleFind = find;\r\n          RuleFindIndex = findIndex;\r\n          if (findRuleSet.length > 1) {\r\n            ruleSet.rules.splice (RuleFindIndex, 1);\r\n          } else {\r\n            /*this.addRule(findRuleSet[0]);*/\r\n            this.state.rules =  this.state.rules.concat(findRuleSet[0]);\r\n            this.deleteRuleSet(index);\r\n          }\r\n        }\r\n    });\r\n    this.setState({}); \r\n    console.log(this.state.ruleSets);\r\n    if (typeof RuleFind === \"undefined\") {\r\n    let newList = this.state.rules.filter((item, i) => item.id !== id);\r\n    this.setState({ rules: newList});\r\n    };\r\n  }\r\n  onChangeSlide = (data) => {\r\n    this.setState({ rangenegative: parseInt(data[0])});\r\n    this.setState({ range: parseInt(data[1])});\r\n  }\r\n  checkRule = (id, arr, setrule, ischeck) => {\r\n      let {checkRules, rules, disabledCheck} = this.state;\r\n      let found = checkRules.some(el => el.id === id);\r\n      let item = checkRules.find(el => el.id === id);\r\n      if (!found) {\r\n        checkRules.push({id: id, data: arr, SetRule: setrule, check: ischeck});\r\n      } else {\r\n        item.data = arr;\r\n        item.SetRule = setrule;\r\n        item.check = ischeck;\r\n      }\r\n      let checked = (checkRules.filter(el => el.check === true).length>1)?false:true;\r\n      console.log(checked);\r\n      /*this.setState({\r\n        disabledCheck: checked\r\n      });*/\r\n  }\r\n  unionRule = () => {\r\n    let {checkRules, rules} = this.state;\r\n    /*let newList = JSON.parse(JSON.stringify(rules));*/\r\n    let found = checkRules.filter(el => el.check === true);\r\n    let arrUnionRule =  JSON.parse(JSON.stringify(found));\r\n    for (let i = 0; arrUnionRule.length > i; i++){\r\n      delete arrUnionRule[i].SetRule;\r\n      delete arrUnionRule[i].check;\r\n      found[i].check = false;\r\n      if (typeof found[i].SetRule !== \"undefined\") {\r\n        this.removeRule(arrUnionRule[i].id);\r\n      } else {\r\n        this.state.rules = this.state.rules.filter((item, x) => item.id !== arrUnionRule[i].id);      \r\n      }    \r\n    }\r\n    this.setState(state => ({\r\n      rules: state.rules\r\n    }));\r\n    this.addNewRuleSet(arrUnionRule);\r\n  }\r\n  transferRule = (id) => {\r\n    var { rules, ruleSets} = this.state;\r\n    var indexSet;\r\n    ruleSets.map((ruleSet, index) => {\r\n      if(ruleSet.rules.find((item, i) => item.id === id))\r\n      indexSet = index;\r\n    });\r\n    if(ruleSets[indexSet].rules.filter((item, i) => item.id !== id).length > 1) {\r\n      console.log(ruleSets[indexSet].rules.find((item, i) => item.id === id).id);\r\n      console.log(ruleSets[indexSet].rules.find((item, i) => item.id === id));\r\n      this.removeRule(ruleSets[indexSet].rules.find((item, i) => item.id === id).id);\r\n      this.addRule(ruleSets[indexSet].rules.find((item, i) => item.id === id));\r\n    } else {\r\n\r\n    }\r\n    console.log(this.state.ruleSets);\r\n    console.log(this.state.rules);\r\n    console.log(this.state.checkRules);\r\n  }\r\n  render() {\r\n    let button = null;\r\n    if (this.state.rules != '' || this.state.ruleSets != '') {\r\n      button = <Button size=\"sm\" variant=\"outline-primary\">Сохранить</Button>\r\n    }\r\n    return (\r\n      <>\r\n        <Container className=\"App\">\r\n              <Row>\r\n                <Col sm=\"6\">\r\n                  <InputGroup  size=\"sm\" className=\"mb-3\">\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text id=\"inputGroup-sizing-sm\">Состояние</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl aria-label=\"Состояние\" aria-describedby=\"inputGroup-sizing-sm\" />\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col sm=\"6\" className=\"text-right\">\r\n                <ButtonToolbar aria-label=\"Toolbar with button groups\" className=\"justify-content-end\">\r\n                  <ButtonGroup className=\"mr-2\" aria-label=\"First group\">\r\n                    <Button size=\"sm\" onClick={this.addNewRule} variant=\"outline-primary\">Добавить</Button>\r\n                  </ButtonGroup>\r\n                  <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\r\n                    <Button \r\n                      size=\"sm\" \r\n                      onClick = {this.unionRule} \r\n                      disabled = {this.state.disabledCheck}> Объединить\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                  <ButtonGroup className=\"mr-2\" aria-label=\"Second group\">\r\n                    {button}\r\n                  </ButtonGroup>\r\n                </ButtonToolbar>\r\n                </Col>             \r\n              </Row>\r\n              <Container className = \"rule-container\">\r\n        <> \r\n              {this.state.ruleSets.map((ruleSet, index) => (\r\n                <>  \r\n                      <RuleSet \r\n                          onChangeSlide={this.onChangeSlide}\r\n                          ruleSet = {ruleSet}\r\n                          rules = {this.state.rules}\r\n                          removeRule= {this.removeRule}\r\n                          addRules = {this.addRules}\r\n                          deleteRuleSet = {this.deleteRuleSet}\r\n                          index = {index}\r\n                          checkRule = {this.checkRule}\r\n                          key={ruleSet.id} \r\n                          transferRule = {this.transferRule}\r\n                          />\r\n                  <hr/>\r\n                </>\r\n              ))}\r\n              {this.state.rules.reverse().map((item, index) => (\r\n                <>  \r\n                      <RuleRange \r\n                          onChangeSlide={this.onChangeSlide}\r\n                          item = {item}\r\n                          removeRule= {this.removeRule}\r\n                          index = {index}\r\n                          checkRule = {this.checkRule}\r\n                          check = {false}\r\n                          key={item.id} \r\n                          />\r\n                  <hr/>\r\n                </>\r\n              ))}\r\n            </>\r\n        </Container> \r\n        </Container>\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Table from 'react-bootstrap/Table';\r\nimport jsonData from './json/import.json';\r\n\r\nclass StatusTable extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            data: {}, \r\n            isFetching: true, \r\n            error: null,\r\n            arr: Object.assign({}, jsonData),\r\n            items: Object.assign({}, jsonData),\r\n            decision: \"\"\r\n            \r\n        };\r\n        \r\n    }\r\n    filterByData =  (data, e) => {\r\n        console.log(data);\r\n        console.log(e.target.name);\r\n        console.log(e.target.value);\r\n        let {items,arr,decision} = this.state;\r\n        if (e.target.value == -1) {\r\n            this.setState({items: Object.assign({}, jsonData), decision: ''});\r\n        } else {\r\n            items.state = arr.state.filter(item => item.id == e.target.value); \r\n            this.setState({});\r\n        }\r\n    }\r\n    getRangeName = (range) => {\r\n        let {items} = this.state;\r\n        for(var i = 0;i < items.range.length; i++) {\r\n            if (items.range[i].id == range) {\r\n                return items.range[i].name;\r\n            }\r\n        }\r\n    }\r\n    getConditionName = (conds) => {\r\n        let {items} = this.state;\r\n        for(var i = 0;i < items.conditions.length; i++) {\r\n            if (items.conditions[i].id == conds) {\r\n                return items.conditions[i].name;\r\n            }\r\n        }\r\n    }\r\n    filterBy =  (data, e) => {\r\n        if (e.target.value == -1) {\r\n            this.setState({items: Object.assign({}, jsonData)});\r\n        } else {\r\n            this.state.items.state = data.filter(item => item.range.indexOf(parseInt(e.target.value)) != -1);\r\n            this.setState({});\r\n        }\r\n    }\r\n    findString = (arr, str) => {\r\n        var array = []; \r\n        for( var i = 0; i < arr.length; ++i ) {\r\n            if( arr[i].name.indexOf( str ) >= 0 ) {\r\n                array.push(i);\r\n            }\r\n        }\r\n        return array;    \r\n    }\r\n    findItems = () => {\r\n\r\n    }\r\n    filterText = (e) => {\r\n        console.log(e.target.name);\r\n        switch(e.target.name) {\r\n            case \"decision\":\r\n                console.log(e.target.value);\r\n                if(e.target.value === \"\" ){}\r\n                this.setState({decision: e.target.value});\r\n                let arrRez = this.findString(this.state.items.range, e.target.value); /*массив id решений */\r\n                console.log(arrRez);\r\n                let arrIndexState = [];\r\n                /*совпадение в массивах */\r\n                this.state.items.state.map((item, index) => {\r\n                    let rez = item.range.filter(function(obj) { return arrRez.indexOf(obj) >= 0; });\r\n                    console.log(rez);\r\n                    if (rez.length !== 0) {\r\n                        arrIndexState.push(item);\r\n                    }\r\n                });\r\n                this.state.items.state = arrIndexState;\r\n                this.setState();\r\n                 \r\n              break;\r\n            case \">\":\r\n             \r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n    }\r\n    componentDidMount = () => {\r\n        fetch('./json/import.json')\r\n            .then(response => response.json())\r\n            .then((result) => this.setState({data: result.data, isFetching: false }),\r\n            (error) => {\r\n                this.setState({\r\n                  isLoaded: true,\r\n                  error\r\n                });\r\n              }\r\n            )\r\n    }\r\n    render() {\r\n        let {items, arr} = this.state;  \r\n        const { select } = this.state;\r\n        return (\r\n            <>\r\n            <Container>\r\n                <Row>\r\n                    <Table id = \"state\" bordered>\r\n                        <thead>\r\n                            <tr>\r\n                            <th>#</th>\r\n                            <th>Состояние\r\n                                <hr/>\r\n                                <select name = \"state\"  defaultValue = {-1} onChange = {e => this.filterByData(items.state, e)}>\r\n                                    <option value=\"-1\">Все</option>\r\n                                    {arr.state.map((item, r) => (\r\n                                        <option key={r} value={item.id}>\r\n                                            { item.name }\r\n                                        </option>\r\n                                    ))} \r\n                                </select>\r\n                            </th>\r\n                            <th>Диапазон\r\n                                <hr/>\r\n                                <Form.Control size=\"sm\" type=\"text\" placeholder=\"\" />\r\n                                {/*<select name = \"conds\"  defaultValue = {-1} onChange = {e => this.filterByData(items.state, e)}>\r\n                                    <option value=\"-1\" >Все</option>\r\n                                    {arr.conditions.map((item, r) => (\r\n                                        <option key={r} value={item.id}>\r\n                                            { item.name }\r\n                                        </option>\r\n                                    ))} \r\n                                    </select>*/}\r\n                                \r\n                            </th>\r\n                            <th>Решение\r\n                                <hr/>\r\n                                <Form.Control size=\"sm\" type=\"text\" placeholder=\"\" name = \"decision\" value = {this.state.decision}  onChange = {e => this.filterText(e)}/>\r\n                                {/*<select name = \"range\" onChange = {e => this.filterBy(items.state, e)}>\r\n                                    <option value=\"-1\">Все</option>\r\n                                    {arr.range.map((item, r) => (\r\n                                        <option key={r} value={item.id}>\r\n                                            { item.name }\r\n                                        </option>\r\n                                    ))} \r\n                                </select>*/}\r\n                            </th>\r\n                            </tr>\r\n                        </thead>\r\n                            {items.state.map((item, index) => (\r\n                                <tbody id = {index}> \r\n                                {item.range.map((rangeItem, r) => {\r\n                                    return item.conds.map((condsItem, i) => (                                                      \r\n                                        (i === 0 & r < 1) ? (\r\n                                        <tr key={index}>\r\n                                            <td rowSpan={(Math.max(item.range.length, item.conds.length))}>{index + 1}</td> \r\n                                            <td rowSpan={(Math.max(item.range.length, item.conds.length))}>{item.name}</td> \r\n                                            <td rowSpan={item.range.length}>{this.getConditionName(condsItem)}</td>\r\n                                            <td rowSpan={item.conds.length}>{this.getRangeName(rangeItem)}</td>                                                                                 \r\n                                        </tr>\r\n                                        ) : (\r\n                                            (item.conds.length>1) ? (\r\n                                            <tr key={index + '' + i}>           \r\n                                                <td rowSpan=\"1\">{this.getConditionName(condsItem)}</td>                                                    \r\n                                            </tr>\r\n                                            ) : (item.conds.length <= 1) ? (\r\n                                                <tr className = {\"tr\" + index} key={index + '' + r}>\r\n                                                    <td key={r}  rowSpan=\"1\">{this.getRangeName(rangeItem)}</td>\r\n                                                </tr>\r\n                                            ) : (\r\n                                                <tr key={index + '' + r + '' + i}>\r\n                                                    <td rowSpan=\"1\">{this.getConditionName(condsItem)}</td>   \r\n                                                    <td rowSpan={item.conds.length}>{this.getRangeName(rangeItem)}</td>\r\n                                                                                                     \r\n                                                </tr>\r\n                                            )                   \r\n                                        )                                                           \r\n                                    ))                                    \r\n                                })}\r\n                            </tbody> \r\n                            )\r\n                            )}\r\n                    </Table>\r\n                </Row>\r\n            </Container>\r\n            </>\r\n        );\r\n    }\r\n        \r\n}\r\n\r\nexport default StatusTable;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.css\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport '../node_modules/nouislider/distribute/nouislider.css';\r\nimport App from './App';\r\nimport StatusTable from './Table';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Link,\r\n  } from 'react-router-dom'\r\n\r\n\r\nconst routing = (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/\" component={App} />\r\n        <Route path=\"/table\" component={StatusTable} />\r\n      </div>\r\n    </Router>\r\n  )\r\nReactDOM.render(routing, document.getElementById('root'));\r\n/*ReactDOM.render(<TodoApp />,document.getElementById('todos-example'));*/\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}